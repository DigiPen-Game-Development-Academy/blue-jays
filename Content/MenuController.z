enum Menu {MAIN, CREDITS, LEVEL, CHAR_SELECT, ACHIEVEMENTS}

class ParticleToggleEvent : ZilchEvent
{
    var Name : String = "ParticleToggle";
}

class MenuController : ZilchComponent
{
    sends ParticleToggleEvent : ParticleToggleEvent;
    [Property] var Menu : Menu;
    function Initialize(init : CogInitializer)
    {
        if(this.Menu == Menu.MAIN)
        {
            this.MainMenu();
        }
        else if(this.Menu == Menu.CREDITS)
        {
            this.Credits();
        }
        else if(this.Menu == Menu.LEVEL)
        {
            this.Level();
        }
        else if(this.Menu == Menu.CHAR_SELECT)
        {
            this.CharacterSelect();
        }
        else if(this.Menu == Menu.ACHIEVEMENTS)
        {
            this.Achievements();
        }
    }
    
    function MainMenu()
    {
        this.Space.FindObjectByName("StartGame").Button.ToCall = this.LoadCharSelect;
        this.Space.FindObjectByName("Achievements").Button.ToCall = this.LoadAchievements;
        this.Space.FindObjectByName("Credits").Button.ToCall = this.LoadCredits;
        this.Space.FindObjectByName("Quit").Button.ToCall = this.GameSession.Quit;
    }
    
    function Credits()
    {
        this.Space.FindObjectByName("Menu").Button.ToCall = this.LoadMenu;
    }
    
    function Level()
    {
        this.Space.FindObjectByName("Menu").Button.ToCall = this.LoadMenu;
        this.Space.FindObjectByName("Resume").Button.ToCall = this.Resume;
        this.Space.FindObjectByName("Options").Button.ToCall = this.ToggleOptions;
        this.Space.FindObjectByName("Back").Button.ToCall = this.ToggleOptions;
        this.Space.FindObjectByName("DisableParticles").Button.ToCall = this.ToggleParticles;
    }
    
    function CharacterSelect()
    {
        this.Space.FindObjectByName("Menu").Button.ToCall = this.LoadMenu;
        this.Space.FindObjectByName("Swords").Button.ToCall = this.LoadSwords; 
        this.Space.FindObjectByName("Wands").Button.ToCall = this.LoadWands;
    }
    
    function Achievements()
    {
        this.Space.FindObjectByName("Menu").Button.ToCall = this.LoadMenu;
    }
    
    function Resume()
    {
        this.Space.FindObjectByName("PauseOverlay").OverlayToggle.Toggle();
        this.Space.TimeSpace.TimeScale = 1;
        this.Space.SoundSpace.Volume = this.Space.FindObjectByName("Circle").Slider.GetPercentage();
        Console.WriteLine(this.Space.FindObjectByName("Circle").Slider.GetPercentage());
    }
    
    function ToggleOptions()
    {
        this.Space.FindObjectByName("PauseOverlay").OverlayToggle.Toggle();
        this.Space.FindObjectByName("OptionsOverlay").OverlayToggle.Toggle();
    }
    
    function ToggleParticles()
    {
        var e = new ParticleToggleEvent();
        this.Space.DispatchEvent(Events.ParticleToggleEvent, e);
        this.Space.Globals.Particles = !this.Space.Globals.Particles;
    }
    
    function LoadCharSelect()
    {
        this.Space.LoadLevel(Level.Find("CharacterSelect"));
    }
    
    function LoadCredits()
    {
        this.Space.LoadLevel(Level.Find("Credits"));
    }
    
    function LoadMenu()
    {
        this.Space.LoadLevel(Level.Find("MainMenu"));
        this.Space.TimeSpace.TimeScale = 1;
    }
    
    function LoadSwords()
    {
        this.Space.LoadLevel(Level.Find("Fool"));
        this.Space.Globals.Suit = Suit.SWORDS;
    }
    
    function LoadWands()
    {
        this.Space.LoadLevel(Level.Find("Fool"));
        this.Space.Globals.Suit = Suit.WANDS;
    }
    
    function LoadAchievements()
    {
        this.Space.LoadLevel(Level.Find("Achievements"));
    }
}
