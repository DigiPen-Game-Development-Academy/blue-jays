//Hunter Fosler
//Purpose: To add bgm to the game.
class PersistentSound : ZilchComponent
{
  // The SoundCue to be played persistently in the Main Menu, How to Play,
  // and Credits levels
  [Property]
  var BackgroundMenuMusic : SoundCue;

  // The SoundCue to be played on the Game Level
  [Property]
  var BackgroundGameMusic : SoundCue;

  // The space archetype by which the new music space will be created
  [Property]
  var BackgroundMusicSpaceArch : Archetype;

  //Level to load on the new music space
  [Property]
  var MusicLevel : Level = null;

  // A reference for the Menu Level's (Level, HowToPlayLevel, CreditsLevel) music space
  var BackgroundMenuMusicSpace : Space;

  // A reference for the Game Level's music space
  var BackgroundGameMusicSpace : Space;
  function Initialize(init : CogInitializer)
{
  // Connect to event dispatched when a level is started
  Zero.Connect(this.Space, Events.LevelStarted, this.OnLevelStarted);
}

// Response function called when the LevelStarted event is heard
function OnLevelStarted(event : GameEvent)
{
  // Check to see if we're in the game level
  if(event.LevelName == "MainMenu")
  {
    // If the space for the Menu Music exists...
    if(this.BackgroundMenuMusicSpace != null)
    {
      // Destroy it, so we don't have two different cues overlapping
      this.BackgroundMenuMusicSpace.Destroy();
    }

    // Safety measure to make sure we don't make a copy of the same space
    // Will most likely never be true
    if(this.BackgroundGameMusicSpace != null)
    {
      Console.WriteLine("You almost created the same space twice!");
      this.BackgroundGameMusicSpace.Destroy();
    }

    // Create a new space for the background game music
    this.BackgroundGameMusicSpace = this.GameSession.CreateSpace(this.BackgroundMusicSpaceArch);

    // Load the music level so we can play the background music
    this.BackgroundGameMusicSpace.LoadLevel(this.MusicLevel);

    // Play the background game music cue from the sound space
    this.BackgroundGameMusicSpace.SoundSpace.PlayCue(this.BackgroundGameMusic);
  }
   else if(event.LevelName == "Fool")
    {
      // If the space for the Game music exists...
      if(this.BackgroundGameMusicSpace != null)
      {
        // Destroy it so we don't have two different cues overlapping
        this.BackgroundGameMusicSpace.Destroy();
      }

      // If this is currently no space for the menu's background music
      if(this.BackgroundMenuMusicSpace == null)
      {
        // Create the space and assign to our menu music space variable
        this.BackgroundMenuMusicSpace = this.GameSession.CreateSpace(this.BackgroundMusicSpaceArch);

        // Load the music level so we can play the menu music
        this.BackgroundMenuMusicSpace.LoadLevel(this.MusicLevel);

        // Play the menu background music cue from the sound space
        this.BackgroundMenuMusicSpace.SoundSpace.PlayCue(this.BackgroundMenuMusic);
      }
    }
  }
}