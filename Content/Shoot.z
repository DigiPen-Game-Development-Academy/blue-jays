//Author: Hunter Fosler
//Purpose: Shooting Logic, and Collison Logic For Tower.

class Shoot : ZilchComponent
{
    [Property] var TimeBetweenShots : Real = 1;
    [Property] var ShootVelocity : Real3 = Real3(10,0,0);
    var TimeTillShoot : Real;
    
    function Initialize(init : CogInitializer)
    {
        this.TimeTillShoot = this.TimeBetweenShots;
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        //couting down timer
        this.TimeTillShoot -= event.Dt;
        //check if we can shoot
        if (this.TimeTillShoot <= 0)
        {
            //Create the bullet
            var arrow = this.Space.CreateAtPosition(Archetype.Arrow, this.Owner.Transform.WorldTranslation + this.ShootVelocity / 100);
            //Launch the bullet
            arrow.RigidBody.Velocity = this.ShootVelocity;
            //Reset our time
            this.TimeTillShoot = this.TimeBetweenShots;
        
        }
        
    }
}