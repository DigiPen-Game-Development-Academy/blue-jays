//Author: Eli Miller
//Purpose: Logic for placing turrets.

class TurretPlace : ZilchComponent
{
    [Dependency] var Transform : Transform;
    
    [Property] var FateRate : Real = 1;
    [Property] var MaxFate : Real = 1;
    [Property] var ChariotCooldownTime : Real = 10;
    [Property] var CursorUpdateTime : Real = 1;
    
    var TurretList : Array[Turret];
    var TurretNum : Integer = 0;
    var CurrentTurret : Turret;
    var Fate : Real;
    var ChariotCooldown : Real = 0;
    var SetCursor : Boolean = false;
    var CursorTimer : Real = 0;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Space, Events.MouseScroll, this.OnScroll);
        Zero.Connect(this.Space, Events.LeftMouseDown, this.OnLeftClick);
        this.TurretList = this.Space.Globals.GetTurrets();
        this.CurrentTurret = this.TurretList[0];
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        this.CursorTimer += event.Dt;
        if(this.CursorTimer >= this.CursorUpdateTime)
        {
            if(this.CheckTurretPlace())
            {
                if(this.SetCursor)
                {
                    this.SetCursor = false;
                    this.Space.Globals.ChangeCursor(CursorColor.WHITE);
                }
            }
            else if(!this.SetCursor)
            {
                this.SetCursor = true;
                this.Space.Globals.ChangeCursor(CursorColor.RED);
            }
        }
        if(Zero.Keyboard.KeyIsDown(Keys.F))
        {
            this.Fate = 1000000000;
            this.Space.AchievementTracker.CheatAchievement.Unlocked = true;
            this.Space.Globals.StoreStats();
        }
        if (Zero.Keyboard.KeyIsDown(Keys.H))
        {
            this.Owner.HP.Health = 1000000000;
            this.Space.AchievementTracker.CheatAchievement.Unlocked = true;
            this.Space.Globals.StoreStats();
        }
        this.ChariotCooldown -= event.Dt;
        if(Zero.Keyboard.KeyIsPressed(Keys.One))
        {
            this.CurrentTurret = this.TurretList[0];
            this.TurretNum = 0;
            this.UpdateCards(0);
        }
        if(Zero.Keyboard.KeyIsPressed(Keys.Two))
        {
            this.CurrentTurret = this.TurretList[1];
            this.TurretNum = 1;
            this.UpdateCards(1);
        }
        if(Zero.Keyboard.KeyIsPressed(Keys.Three))
        {
            this.CurrentTurret = this.TurretList[2];
            this.TurretNum = 2;
            this.UpdateCards(2);
        }
        if (this.Space.TimeSpace.TimeScale == 1)
        {
            if(this.Fate < this.MaxFate)
            {
                this.Fate += event.Dt * this.FateRate;
            }
        }
    }
    
    function OnScroll(event : MouseEvent)
    {
        if(event.Scroll.Y < 0)
        {
            if(this.TurretNum == 2)
            {
                this.TurretNum = 0;
            }
            else
            {
                this.TurretNum += 1;
            }
        }
        else if(event.Scroll.Y > 0)
        {
            if(this.TurretNum == 0)
            {
                this.TurretNum = this.TurretList.Count - 1;
            }
            else
            {
                this.TurretNum -= 1;
            }
        }
        this.UpdateCards(this.TurretNum);
        this.CurrentTurret = this.TurretList[this.TurretNum];
    }
    
    function CheckTurretPlace() : Boolean
    {
        if(this.Fate < this.CurrentTurret.Fate)
        {
            return false;
        }
        if(this.CurrentTurret.Name == "The Chariot")
        {
            if(this.ChariotCooldown <= 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        else
        {
            return true;
        }
    }
    
    function OnLeftClick(event : ViewportMouseEvent)
    {
        if(!this.CheckTurretPlace() || this.Space.TimeSpace.TimeScale != 1)
        {
            return;
        }
        if(this.CurrentTurret.Name == "The Chariot")
        {
            this.ChariotCooldown = this.ChariotCooldownTime;
        }
        var turret = this.Space.CreateAtPosition(this.CurrentTurret.Archetype, event.ToWorldZPlane(0));
        turret.Transform.Translation += Real3(0,turret.BoxCollider.Size.Y / 2,0);
        if(this.CurrentTurret.Type == TurretType.KNIGHT)
        {
            this.Space.Globals.SavedStats.SavedStats.KnightSpawns += 1;
        }
        else if(this.CurrentTurret.Type == TurretType.STATIONARY)
        {
            this.Space.Globals.SavedStats.SavedStats.StationarySpawns += 1;
        }
        else if(this.CurrentTurret.Type == TurretType.UNIQUE)
        {
            this.Space.Globals.SavedStats.SavedStats.UniqueSpawns += 1;
        }
        this.Space.Globals.SavedStats.SavedStats.Spawns += 1;
        this.Space.Globals.StoreStats();
        this.Fate -= this.CurrentTurret.Fate;
    }
    
    function UpdateCards(num : Integer)
    {
        this.Space.FindObjectByName("KnightCard").Sprite.Color = Real4(1,1,1,0.6);
        this.Space.FindObjectByName("TowerCard").Sprite.Color = Real4(1,1,1,0.6);
        this.Space.FindObjectByName("ChariotCard").Sprite.Color = Real4(1,1,1,0.6);
        if(num == 0)
        {
            this.Space.FindObjectByName("KnightCard").Sprite.Color = Real4(1,1,1,1);
        }
        else if(num == 1)
        {
            this.Space.FindObjectByName("TowerCard").Sprite.Color = Real4(1,1,1,1);
        }
        else if(num == 2)
        {
            this.Space.FindObjectByName("ChariotCard").Sprite.Color = Real4(1,1,1,1);
        }
    }
}
