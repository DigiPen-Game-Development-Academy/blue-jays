class RoseThrow : ZilchComponent
{
    [Property] var Cooldown : Real = 10;
    [Property] var Time : Real = 4;
    [Property] var MaxRPS : Real = 50;
    [Property] var Chance : Real = 0.5;
    [Property] var SpawnRadius : Real = 20;
    
    var Rand : Random = Random();
    var Timer : Real = 0;
    var RoseTimer : Real = 0;
    var CumulativeRT : Real = 0;
    var Attacking : Boolean = false;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        this.Timer += event.Dt;
        if(this.Timer >= this.Cooldown)
        {
            this.Timer = 0;
            this.Attacking = this.Rand.Probability(this.Chance);
        }
        if(this.Attacking)
        {
            this.RoseTimer += event.Dt;
            this.CumulativeRT += event.Dt;
            if(this.CumulativeRT >= this.Time)
            {
                this.Attacking = false;
            }
            var rps = this.CumulativeRT / this.MaxRPS * this.Time;
            while(this.RoseTimer >= rps)
            {
                var pos = Real3(this.Rand.UnitReal2() * this.SpawnRadius,0.2);
                var rose = this.Space.CreateAtPosition(Archetype.Rose, pos);
                rose.RigidBody.Velocity = (Real3() - rose.Transform.Translation) * this.Rand.Real();
                this.RoseTimer -= rps;
            }
        }
    }
}
