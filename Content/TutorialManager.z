class DeathEvent :ZilchEvent
{
    sends Death:DeathEvent;
    var DyingObject : Cog;
    constructor (dyingobject:Cog):base ()
    {
        this.DyingObject = dyingobject;
    }
}
class TutorialManager : ZilchComponent
{

[Property]
 var Delay : Real;
 
var Text : Array[Text];
    function Initialize(init : CogInitializer)
    {
                
        
        Zero.Connect(this.GameSession, Events.Death, this.OnDeath);
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        
    }

    function OnDeath(event : DeathEvent)
    {
        if (event.DyingObject.Health != null && event.DyingObject.Health.HealthType == HealthType.EnemyMinion)
        {
            
            Console.WriteLine(event.DyingObject.Name);
            Zero.Connect(this.Space, Events.LogicUpdate, this.TextConnect);
            var tutorial1 : Boolean = true;
        }
    }


    function OnLogicUpdate(event : UpdateEvent)
    {
        if (this.Delay > 0.0)
        {
            this.Delay -= event.Dt;
        }
        
        this.Owner.SpriteText.Visible = false;
        
        if(this.Space.CurrentLevel == Level.Find("Fool"))
        {
            this.Owner.Destroy();
        }
    }

   
    
     function TextConnect(event : UpdateEvent)
    
    {
                if (this.Delay <= 0.0)
        {
            
            this.Owner.SpriteText.Text = "Left-Click to spawn a Tarot Card. Try Spawing the KNIGHT OF SWORDS.";
            this.Owner.SpriteText.Visible = true;
            
        }
        

    }

}
