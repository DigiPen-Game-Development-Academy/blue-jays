class Button : ZilchComponent
{
    [Dependency] var Area : Area;
    [Dependency] var Transform : Transform;
    
    [Property] var ScaleFactor : Real = 1;
    
    var ToCall : delegate() = null;
    var Selected : Boolean = false;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.MouseUpdate, this.OnMouseUpdate);
        Zero.Connect(this.Space, Events.LeftMouseDown, this.OnLeftClick);
    }

    function OnMouseUpdate(event : ViewportMouseEvent)
    {
        var mousepos = event.ToWorldZPlane(0);
        var max : Real2 = this.Transform.WorldTranslation.XY + this.Area.Size / 2;
        var min : Real2 = this.Transform.WorldTranslation.XY - this.Area.Size / 2;
        if(mousepos.X < max.X && mousepos.Y < max.Y && mousepos.X > min.X && mousepos.Y > min.Y)
        {
            if(!this.Selected)
            {
                this.Selected = true;
                this.Transform.Scale *= this.ScaleFactor;
            }
        }
        else if(this.Selected)
        {
            this.Selected = false;
            this.Transform.Scale /= this.ScaleFactor;
        }
    }
    
    function OnLeftClick(event : ViewportMouseEvent)
    {
        if(this.Selected && (this.ToCall != null))
        {
            this.ToCall();
        }
    }
}
