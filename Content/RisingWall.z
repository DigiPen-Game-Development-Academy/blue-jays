enum RisingState {RISING, LOWERING, UP_IDLE, DOWN_IDLE}

class RisingWall : ZilchComponent
{
    [Property] var MaxHeight : Real;
    [Property] var RiseSpeed : Real;
    [Property] var LowerSpeed : Real;
    [Property] var IdleTime : Real;
    
    var State : RisingState = RisingState.DOWN_IDLE;
    var IdleTimer : Real;
    var LoweredHeight : Real;
    
    function Initialize(init : CogInitializer)
    {
        this.IdleTimer = this.IdleTime;
        this.LoweredHeight = this.Owner.Transform.Translation.Y;
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        if(this.State == RisingState.DOWN_IDLE)
        {
            this.IdleTimer -= event.Dt;
            if(this.IdleTimer <= 0)
            {
                this.State = RisingState.RISING;
            }
        }
        else if(this.State == RisingState.RISING)
        {
            this.Owner.Transform.Translation += Real3(0,event.Dt * this.RiseSpeed, 0);
            if(this.Owner.Transform.Translation.Y >= this.MaxHeight)
            {
                this.State = RisingState.UP_IDLE;
            }
        }
        else if(this.State == RisingState.UP_IDLE)
        {
            this.IdleTimer -= event.Dt;
            if(this.IdleTimer <= 0)
            {
                this.State = RisingState.LOWERING;
            }
        }
        else if(this.State == RisingState.LOWERING)
        {
            this.Owner.Transform.Translation -= Real3(0,event.Dt * this.LowerSpeed, 0);
            if(this.Owner.Transform.Translation.Y <= this.LoweredHeight)
            {
                this.State = RisingState.DOWN_IDLE;
                this.IdleTimer = this.IdleTime;
            }
        }
    }
}
